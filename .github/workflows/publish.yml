name: Publish Library to JFrog

on:
  push:
    branches:
      - feature/*
      - dev
      - qa
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  # ----------------- BUILDS THE LIBRARY -----------------
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js (match the version you use locally)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Run Unit Tests
      # - name: Run Tests
      #   run: npm run test

      # Build the Library
      - name: Build the Library
        run: npm run build-prod

      # Authenticate to JFrog Artifactory
      - name: Configure NPM for JFrog
        run: |
          echo "//trial4g26zg.jfrog.io/artifactory/api/npm/components-library-npm/:_authToken=${{ secrets.JFROG_ACCESS_TOKEN }}" >> ~/.npmrc
          echo "registry=https://trial4g26zg.jfrog.io/artifactory/api/npm/components-library-npm/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
          cat ~/.npmrc

      # Save Build Artifact
      # - name: Save Build Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: build-artifact
      #     path: dist/components-library
      #     retention-days: 1

  # ----------------- SETS A VERSION NUMBER -----------------
  versioning:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate version number
        run: |
          echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

  # ----------------- DEPLOYS THE LIBRARY TO JFROG DEV -----------------
  deploy-dev:
    needs: [build, versioning]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      # - name: Download Build Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-artifact
      #     path: dist/components-library
      - name: Publish Package to JFrog | Dev
        run: |
          VERSION="${{github.run_number}}-dev"
          cd projects/components-library
          npm version $VERSION
          cd -
          echo "Publishing $VERSION to Dev..."
          npm run publish
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}

  # ----------------- DEPLOYS THE LIBRARY TO JFROG QA -----------------
  deploy-qa:
    needs: [build, versioning]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/qa'
    steps:
      # - name: Download Build Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-artifact
      #     path: dist/components-library
      - name: Publish Package to JFrog | QA
        run: |
          VERSION="${{github.run_number}}-qa"
          cd projects/components-library
          npm version $VERSION
          cd -
          echo "Publishing $VERSION to QA..."
          npm run publish
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}

  # ----------------- DEPLOYS THE LIBRARY TO JFROG PROD -----------------
  deploy-prod:
    needs: [build, versioning]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      # - name: Download Build Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-artifact
      #     path: dist/components-library
      - name: Publish Package to JFrog | Prod
        run: |
          VERSION="${{github.run_number}}-prod"
          ls -la
          cd projects/components-library
          npm version $VERSION
          cd -
          echo "Publishing $VERSION to Prod..."
          npm run publish
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}

  # ----------------- DEPLOYS THE LIBRARY TO JFROG FEATURE -----------------
  deploy-feature:
    needs: [build, versioning]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature/')
    steps:
      # - name: Download Build Artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-artifact
      #     path: dist/components-library
      - name: Publish Package to JFrog | Feature
        run: |
          VERSION="${{github.run_number}}-feat"
          cd projects/components-library
          npm version $VERSION
          cd -
          echo "Publishing $VERSION to Feature..."
          npm run publish
        env:
          JFROG_ACCESS_TOKEN: ${{ secrets.JFROG_ACCESS_TOKEN }}
